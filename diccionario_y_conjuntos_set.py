# -*- coding: utf-8 -*-
"""Diccionario y conjuntos set.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aB9wqddIjg8PLz3k22ejSHxJioPyz1Av

Diccionarios en Python
 Un **diccionario** en Python es una colección de pares clave-valor. Cada clave es única e inmutable,
 mientras que los valores pueden ser de cualquier tipo. Los diccionarios se definen utilizando llaves `{}`,
 donde cada elemento tiene el formato `clave: valor`

keys(): Devuelve una vista con todas las claves del diccionario
"""

estudiante = {"nombre": "Ana", "edad": 20, "carrera": "Ingeniería"}
 print(estudiante.keys())

"""EJEMPLO 01"""

mi_familia={"CRISTINA":"madre","LADISLAO":"padre","HIPOLITO":"abuelo","HILARIA":"abuela","RAUL": "hermano", "EDWIN": "hermano", "hijos": "lista"}
print(mi_familia.keys())

# Imprimir solo las claves del diccionario mi_familia
print(mi_familia.keys())

"""mis amigos"""

mis_amigos = {"Juan": "mejor amigo", "Maria": "amiga de la infancia", "Pedro": "amigo del trabajo"}

# Imprimir solo las claves del diccionario mis_amigos
print(mis_amigos.keys())
print(mis_amigos["Maria"])

""" values(): Devuelve una vista con todos los valores del diccionario"""

mis_amigos = {"Juan": "mejor amigo", "Maria": "amiga de la infancia", "Pedro": "amigo del trabajo"}

# Imprimir solo las claves del diccionario mis_amigos
print(mis_amigos.values())
print(mis_amigos["Maria"])

""" items(): Devuelve una vista con pares (clave, valor)"""

estudiante = {"nombre": "Ana", "edad": 20, "carrera": "Ingeniería"}
print(estudiante.items())

""" get(): Devuelve el valor de una clave, evitando errores si no existe"""

estudiante = {"nombre": "Ana", "edad": 20, "carrera": "Ingeniería"}
print(estudiante.get("nombre"))

""" update(): Actualiza el diccionario con pares clave-valor."""

mis_amigos = {"Juan": "mejor amigo", "Maria": "amiga de la infancia", "Pedro": "amigo del trabajo"}

# Update the mis_amigos dictionary with new key-value pairs
mis_amigos.update({"transportista": "luisa","Arquitectos":"calisaya"})

# Print the updated dictionary to see the changes
print(mis_amigos)

# Print the value for the key "Maria"
print(mis_amigos["Maria"])

""" pop(): Elimina una clave y devuelve su valor"""

mis_amigos = {"Juan": "mejor amigo", "Maria": "amiga de la infancia", "Pedro": "amigo del trabajo"}

# Update the mis_amigos dictionary with new key-value pairs
mis_amigos.update({"transportista": "luisa","Arquitectos":"calisaya"})

# Remove items using the pop() method with keys
mis_amigos.pop("transportista")
mis_amigos.pop("Arquitectos")

# Print the updated dictionary to see the changes
print(mis_amigos)

# Print the value for the key "Maria"
print(mis_amigos["Maria"])

""" Conjuntos (Sets) en Python
 Un **set** o conjunto en Python es una colección desordenada de elementos únicos. Se define con llaves
 `{}` o con la función `set()`.
"""

numeros = {1, 2, 3, 4, 4, 5}
 print(numeros)  # {1, 2, 3, 4, 5} (no permite duplicados)

""" add(): Agrega un elemento al conjunto."""

# Create a set
colores = {"rojo", "verde", "azul"}
print("Set original:", colores)

# Use the add() method to add an element
colores.add("amarillo")
print("Set después de add():", colores)

# Trying to add a duplicate element
colores.add("rojo")
print("Set después de intentar agregar un duplicado:", colores) # Duplicates are not added

"""  remove(): Elimina un elemento, lanza error si no existe"""

# Create a set
frutas = {"manzana", "banana", "cereza", "dátil"}
print("Set original:", frutas)

# Use the remove() method to remove an element
frutas.remove("banana")
print("Set después de remove():", frutas)

# Trying to remove an element that does not exist will raise a KeyError
# frutas.remove("uva") # Uncommenting this line will cause an error

""" discard(): Elimina un elemento si existe, sin error si no"""

# Create a set
colores = {"rojo", "verde", "azul"}
print("Set original:", colores)

# Use the discard() method to remove an element that exists
colores.discard("verde")
print("Set después de discard('verde'):", colores)

# Use the discard() method to try to remove an element that does not exist
colores.discard("amarillo") # This will not raise an error
print("Set después de discard('amarillo'):", colores)